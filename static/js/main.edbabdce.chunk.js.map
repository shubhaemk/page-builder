{"version":3,"sources":["assets/dots-menu.svg","components/ElementTypeComponent/ElementType.component.jsx","container/ListContainer/List.container.jsx","components/ButtonComponent/Button.component.jsx","components/InputComponent/Input.component.jsx","components/LabelComponent/Label.component.jsx","components/ElementComponent/Element.component.jsx","container/CanvasContainer/Canvas.container.jsx","assets/close.svg","components/LabelledInputComponent/LabelledInput.component.jsx","components/ModalComponent/Modal.component.jsx","screen/HomeScreen/Home.screen.jsx","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","SvgDotsMenu","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","ElementTypeComponent","elementType","onItemDragOver","mousePointerRef","useRef","useEffect","dropEventListener","event","current","clientX","clientY","window","addEventListener","removeEventListener","className","onDragEnd","draggable","elementTypeList","elementId","ListContainer","triggerCreateItem","maxXCoordinate","maxYCoordinate","localElementType","xCoordinate","yCoordinate","map","detail","ButtonComponent","displayText","onClickFunction","onClick","fontSize","fontWeight","InputComponent","setInputValue","isFocused","useState","inputText","setInputText","onChange","value","autoFocus","LabelComponent","ElementComponent","element","setSelectedElement","updateElementPosition","updateElementText","removeCanvasElement","text","zIndex","isClicked","setIsClicked","coordinates","setCoordinates","elementRef","isClickedLatest","updateElementTextLocal","handleClickOutside","contains","handleKeyPress","preventDefault","keyCode","handleKeyDown","document","styleObject","position","left","top","border","padding","onDragStart","isFirefox","InstallTrigger","opacity","onDrag","pageX","pageY","originalCoordinates","onDragOver","localDisplayText","_renderElement","INVISIBLE_CANVAS_BORDER","CanvasContainer","canvasElements","maxCoordinate","isElementInCanvas","updateCanvasMaxCoordinates","canvasRef","clientHeight","clientWidth","onDragLeave","SvgClose","LabelledInputComponent","inputValue","ModalComponent","selectedElement","updateElementValues","cancelUpdateElement","isElementNew","textLocal","setTextLocal","xCoordinateLocal","setXCoordinateLocal","yCoordinateLocal","setYCoordinateLocal","fontSizeLocal","setFontSizeLocal","fontWeightLocal","setFontWeightLocal","errorMessage","setErrorMessage","cancelUpdateElementLocal","onSubmitHandler","trim","isNaN","Number","parseInt","parseFloat","updateElementValuesLocal","handleKeyUp","onSubmit","LOCAL_STORAGE_NAME","HomeScreen","setMaxCoordinate","setIsElementInCanvas","isLocalCanvasElementsSet","setIsLocalCanvasElementsSet","setCanvasElements","canvasElementsLatest","localStorage","setItem","JSON","stringify","parse","getItem","previousCanvasElements","canvasElement","uuid4","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edbabdce.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M33.144,2.471C15.336,2.471,0.85,16.958,0.85,34.765s14.48,32.293,32.294,32.293s32.294-14.486,32.294-32.293 S50.951,2.471,33.144,2.471z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M137.663,2.471c-17.807,0-32.294,14.487-32.294,32.294s14.487,32.293,32.294,32.293c17.808,0,32.297-14.486,32.297-32.293 S155.477,2.471,137.663,2.471z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32.3,170.539c17.807,0,32.297-14.483,32.297-32.293c0-17.811-14.49-32.297-32.297-32.297S0,120.436,0,138.246 C0,156.056,14.493,170.539,32.3,170.539z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M136.819,170.539c17.804,0,32.294-14.483,32.294-32.293c0-17.811-14.478-32.297-32.294-32.297 c-17.813,0-32.294,14.486-32.294,32.297C104.525,156.056,119.012,170.539,136.819,170.539z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M33.039,209.108c-17.807,0-32.3,14.483-32.3,32.294c0,17.804,14.493,32.293,32.3,32.293s32.293-14.482,32.293-32.293 S50.846,209.108,33.039,209.108z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M137.564,209.108c-17.808,0-32.3,14.483-32.3,32.294c0,17.804,14.487,32.293,32.3,32.293 c17.804,0,32.293-14.482,32.293-32.293S155.368,209.108,137.564,209.108z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgDotsMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"276.167px\",\n    height: \"276.167px\",\n    viewBox: \"0 0 276.167 276.167\",\n    style: {\n      enableBackground: \"new 0 0 276.167 276.167\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDotsMenu);\nexport default __webpack_public_path__ + \"static/media/dots-menu.97dce87e.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from \"react\";\nimport { ReactComponent as MenuSVG } from \"../../assets/dots-menu.svg\";\n\nimport \"./ElementType.styles.css\";\n\nconst ElementTypeComponent = (props) => {\n  const { elementType, onItemDragOver } = props;\n\n  /**\n   * Ref : Stores current mouse position\n   */\n\n  const mousePointerRef = useRef({\n    x: 0,\n    y: 0,\n  });\n\n  /**\n   * sets details of drop location and item in main screen\n   */\n\n  const onDragEndHandler = () => {\n    onItemDragOver(\n      elementType,\n      mousePointerRef.current.x,\n      mousePointerRef.current.y\n    );\n  };\n\n  /**\n   * This hook adds event listener for drop events on window\n   * Need this to get drop location as you can't get screenX, screenY on firefox\n   */\n\n  useEffect(() => {\n    const dropEventListener = (event) => {\n      mousePointerRef.current = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n    };\n    window.addEventListener(\"drop\", dropEventListener);\n\n    return () => window.removeEventListener(\"drop\", dropEventListener);\n  }, []);\n\n  return (\n    <div className=\"draggable-element\" onDragEnd={onDragEndHandler} draggable>\n      <MenuSVG className=\"draggable-element-icon\" />\n      <span className=\"draggable-element-title\">{elementType}</span>\n    </div>\n  );\n};\n\nexport default ElementTypeComponent;\n","import ElementTypeComponent from \"../../components/ElementTypeComponent/ElementType.component\";\n\nimport \"./List.styles.css\";\n\n/**\n * Default list of elements to be rendered in List Container\n */\n\nconst elementTypeList = [\n  {\n    elementId: 1,\n    elementType: \"label\",\n  },\n  {\n    elementId: 2,\n    elementType: \"input\",\n  },\n  {\n    elementId: 3,\n    elementType: \"button\",\n  },\n];\n\nconst ListContainer = (props) => {\n  const { triggerCreateItem, maxXCoordinate, maxYCoordinate } = props;\n\n  /**\n   * Validates if drop location is canvas and triggers creation of element\n   * @param {string} localElementType - Type of element (label/input/button)\n   * @param {number} xCoordinate - X Coordinate of element dropped\n   * @param {number} yCoordinate - Y Coordinate of element dropped\n   */\n\n  const onItemDragOver = (localElementType, xCoordinate, yCoordinate) => {\n    const isELementPlaceValid =\n      xCoordinate >= 0 &&\n      yCoordinate >= 0 &&\n      xCoordinate < maxXCoordinate &&\n      yCoordinate < maxYCoordinate;\n\n    if (isELementPlaceValid) {\n      triggerCreateItem(localElementType, xCoordinate, yCoordinate);\n    }\n  };\n\n  return (\n    <div className=\"list-container\">\n      <span className=\"list-container-title\">Blocks</span>\n      {elementTypeList.map((detail) => {\n        const { elementId, elementType } = detail;\n        return (\n          <ElementTypeComponent\n            key={elementId}\n            elementType={elementType}\n            onItemDragOver={onItemDragOver}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ListContainer;\n","import \"./Button.styles.css\";\n\nconst ButtonComponent = (props) => {\n  const { displayText, onClickFunction } = props;\n  /**\n   * This event checks if any onclick function is passed form parent and triggers it if present\n   * @param {object} event\n   */\n\n  const onClickHandler = (event) => onClickFunction && onClickFunction(event);\n  return (\n    <button\n      className=\"button-component\"\n      onClick={onClickHandler}\n      style={{ fontSize: \"inherit\", fontWeight: \"inherit\" }}\n    >\n      {displayText}\n    </button>\n  );\n};\n\nexport default ButtonComponent;\n","import { useState, useEffect } from \"react\";\nimport \"./Input.styles.css\";\n\nconst InputComponent = (props) => {\n  const { displayText, setInputValue, isFocused } = props;\n\n  /**\n   * Stores local value of input box\n   */\n\n  const [inputText, setInputText] = useState(null);\n\n  /**\n   * This function, updates local copy as well as triggers update in orignal canvas elements list\n   * @param {object} event\n   */\n\n  const onChangeHandler = (event) => {\n    const { value } = event.target;\n    setInputValue && setInputValue(value);\n    setInputText(value);\n  };\n  /**\n   * This effect update local value, when original value is changed\n   */\n\n  useEffect(() => {\n    if (displayText !== inputText) setInputText(displayText);\n  }, [displayText, inputText]);\n\n  return (\n    <input\n      className=\"input-component\"\n      style={{ fontSize: \"inherit\", fontWeight: \"inherit\" }}\n      onChange={onChangeHandler}\n      value={inputText || \"\"}\n      autoFocus={isFocused}\n    />\n  );\n};\n\nexport default InputComponent;\n","import \"./Label.styles.css\";\n\nconst LabelComponent = (props) => {\n  const { displayText } = props;\n\n  return (\n    <span\n      className=\"label-component\"\n      style={{ fontSize: \"inherit\", fontWeight: \"inherit\" }}\n    >\n      {displayText}\n    </span>\n  );\n};\n\nexport default LabelComponent;\n","import { useState, useRef, useEffect } from \"react\";\nimport ButtonComponent from \"../ButtonComponent/Button.component\";\nimport InputComponent from \"../InputComponent/Input.component\";\nimport LabelComponent from \"../LabelComponent/Label.component\";\n\nimport \"./Element.styles.css\";\n\nconst ElementComponent = (props) => {\n  const {\n    element,\n    maxXCoordinate,\n    maxYCoordinate,\n    setSelectedElement,\n    updateElementPosition,\n    updateElementText,\n    removeCanvasElement,\n  } = props;\n\n  const {\n    elementId,\n    elementType,\n    text,\n    xCoordinate,\n    yCoordinate,\n    zIndex,\n    fontSize,\n    fontWeight,\n  } = element;\n\n  /**\n   * Bool - Used to check if current element is clicked\n   */\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  /**\n   * Object - Local copy of element X and Y Coordinates\n   */\n\n  const [coordinates, setCoordinates] = useState({\n    x: xCoordinate,\n    y: yCoordinate,\n  });\n\n  /**\n   * Ref - Used to access DOM properties of element\n   */\n\n  const elementRef = useRef();\n\n  /**\n   * Ref (bool) - Used to get the latest value of isClicked in some troubled functions\n   */\n\n  const isClickedLatest = useRef(isClicked);\n\n  /**\n   * Ref : Stores current mouse position\n   */\n\n  const mousePointerRef = useRef({\n    x: 0,\n    y: 0,\n  });\n\n  /**\n   * Updates text of selected element in Canvas Elements list\n   * @param {string} text\n   */\n\n  const updateElementTextLocal = (text) => updateElementText(text, elementId);\n\n  /**\n   * Visibility of element is set to 0 to hide draggging ghost image and element together (element is hidden)\n   * typeof InstallTrigger !== \"undefined\" checks if browser is firefox\n   */\n\n  const onDragStartHandler = () => {\n    const isFirefox = typeof InstallTrigger !== \"undefined\";\n    elementRef.current.style.opacity = isFirefox ? \"1\" : \"0\";\n  };\n\n  /**\n   * On Drage event handler, updates local values of Element Coordinates\n   * @param {object} event\n   */\n\n  const onDragHandler = (event) => {\n    let { pageX: xCoordinate, pageY: yCoordinate } = event;\n\n    setCoordinates((originalCoordinates) => ({\n      x:\n        xCoordinate > 0 && xCoordinate < maxXCoordinate\n          ? xCoordinate\n          : originalCoordinates.x,\n      y:\n        yCoordinate > 0 && yCoordinate < maxYCoordinate\n          ? yCoordinate\n          : originalCoordinates.y,\n    }));\n  };\n\n  /**\n   * When element drag ends, its value is reflected in Canvas element List\n   */\n\n  const onDragEndHandler = () => {\n    updateElementPosition(\n      mousePointerRef.current.x,\n      mousePointerRef.current.y,\n      elementId\n    );\n  };\n\n  /**\n   * Used to set Opacity 1, when being dragged\n   * @param {object} event\n   */\n\n  const onDragOverHandler = (event) => {\n    event.preventDefault();\n    elementRef.current.style.opacity = \"1\";\n  };\n\n  /**\n   * Sets isClicked to true, to highlight it\n   * @param {object} event\n   */\n\n  const onClickHandler = (event) => {\n    event.preventDefault();\n    setIsClicked(true);\n  };\n\n  /**\n   * Renders Element depending on its type\n   * @param {string} localElementType - Element type to be rendered (label, input, button)\n   * @param {string} localDisplayText - Text to display in Rendered Element\n   */\n\n  const _renderElement = (localElementType, localDisplayText) => {\n    if (localElementType === \"input\")\n      return (\n        <InputComponent\n          displayText={localDisplayText}\n          setInputValue={updateElementTextLocal}\n        />\n      );\n    if (localElementType === \"label\")\n      return <LabelComponent displayText={localDisplayText} />;\n    if (localElementType === \"button\")\n      return <ButtonComponent displayText={localDisplayText} />;\n\n    return null;\n  };\n\n  /**\n   * Returns, class name depending on element type\n   * @param {string} localElementType - Element type (label, input, button)\n   */\n\n  const _getElementClass = (localElementType) =>\n    `element-component-${localElementType} element-component-common`;\n\n  /**\n   * This effect runs when elementRef is accessible and adds event listener on\n   * element for key presses (enter/delete)\n   */\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (elementRef.current && !elementRef.current.contains(event.target)) {\n        setIsClicked(false);\n      }\n    };\n\n    const handleKeyPress = (event) => {\n      event.preventDefault();\n\n      if (isClickedLatest.current) {\n        const { keyCode } = event;\n        if (keyCode === 13) {\n          setSelectedElement(elementId);\n          setIsClicked(false);\n        }\n\n        if (keyCode === 8) {\n          removeCanvasElement(elementId);\n          setIsClicked(false);\n        }\n      }\n    };\n\n    const handleKeyDown = (event) =>\n      event.keyCode === 8 && isClickedLatest.current && event.preventDefault();\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    document.addEventListener(\"keyup\", handleKeyPress);\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n      document.removeEventListener(\"keyup\", handleKeyPress);\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n    // eslint-disable-next-line\n  }, [elementRef, isClicked]);\n\n  /**\n   * This effect updates positon of element on any change in original element\n   */\n\n  useEffect(() => {\n    setCoordinates({\n      x: xCoordinate || 0,\n      y: yCoordinate || 0,\n    });\n  }, [xCoordinate, yCoordinate]);\n\n  /**\n   * This effect is used to update the ref, which stores latest value of isClicked for functions with stale state\n   */\n\n  useEffect(() => {\n    isClickedLatest.current = isClicked;\n  }, [isClicked]);\n\n  /**\n   * This hook adds event listener for drop events on window\n   * Need this to get drop location as you can't get screenX, screenY on firefox\n   */\n\n  useEffect(() => {\n    const dropEventListener = (event) => {\n      mousePointerRef.current = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n    };\n\n    window.addEventListener(\"drop\", dropEventListener);\n\n    return () => window.removeEventListener(\"drop\", dropEventListener);\n  }, []);\n\n  const styleObject = {\n    position: \"absolute\",\n    left: coordinates.x,\n    top: coordinates.y,\n    fontSize: `${fontSize}rem`,\n    fontWeight,\n    zIndex: zIndex,\n    border: `0.2rem solid ${isClicked ? \"#E00\" : \"transparent\"}`,\n    padding: \"0.5rem\",\n  };\n\n  return (\n    <div\n      ref={elementRef}\n      className={_getElementClass(elementType)}\n      style={styleObject}\n      onDragStart={onDragStartHandler}\n      onDrag={onDragHandler}\n      onDragEnd={onDragEndHandler}\n      onDragOver={onDragOverHandler}\n      onClick={onClickHandler}\n      draggable={true}\n    >\n      {_renderElement(elementType, text)}\n    </div>\n  );\n};\n\nexport default ElementComponent;\n","import { useEffect, useRef } from \"react\";\nimport \"./Canvas.styles.css\";\n\nimport ElementComponent from \"../../components/ElementComponent/Element.component\";\n\nconst INVISIBLE_CANVAS_BORDER = \"0.25rem solid transparent\";\nconst VISIBLE_CANVAS_BORDER = \"0.25rem dashed rgba(0,0,0, 0.4)\";\n\nconst CanvasContainer = (props) => {\n  const {\n    canvasElements,\n    maxCoordinate,\n    isElementInCanvas,\n    updateCanvasMaxCoordinates,\n    setSelectedElement,\n    updateElementPosition,\n    updateElementText,\n    removeCanvasElement,\n  } = props;\n\n  /**\n   * Ref - Used to access Canvas Heigtht and Width on render, also to set border properties\n   */\n\n  const canvasRef = useRef();\n\n  /**\n   * Adds border when an element is dragged in current container\n   * preventDefault is neccessory to hide ghost image of element when dropped\n   * @param {object} event\n   */\n\n  const handleDragOver = (event) => {\n    canvasRef.current.style.border = VISIBLE_CANVAS_BORDER;\n    event.preventDefault();\n  };\n\n  /**\n   * Removes border when drag leaves current Canvas\n   */\n\n  const handleDragLeave = () => {\n    canvasRef.current.style.border = INVISIBLE_CANVAS_BORDER;\n  };\n\n  /**\n   * This effect runs at mounting, updates maxCoordinates in parent component\n   */\n\n  useEffect(() => {\n    const { clientHeight, clientWidth } = canvasRef.current;\n    updateCanvasMaxCoordinates(clientWidth, clientHeight);\n    // eslint-disable-next-line\n  }, []);\n\n  /**\n   * This effect removes border when either canvas elements are updated or when modal is cancelled in case of new elements\n   */\n\n  useEffect(() => {\n    canvasRef.current.style.border = INVISIBLE_CANVAS_BORDER;\n  }, [canvasElements, isElementInCanvas]);\n\n  return (\n    <div\n      className=\"canvas-container\"\n      ref={canvasRef}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n    >\n      {canvasElements.map((element) => {\n        const { elementId } = element;\n\n        return (\n          <ElementComponent\n            key={elementId}\n            element={element}\n            maxXCoordinate={maxCoordinate.x}\n            maxYCoordinate={maxCoordinate.y}\n            setSelectedElement={setSelectedElement}\n            updateElementPosition={updateElementPosition}\n            updateElementText={updateElementText}\n            removeCanvasElement={removeCanvasElement}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CanvasContainer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m194.800781 164.769531 128.210938-128.214843c8.34375-8.339844 8.34375-21.824219 0-30.164063-8.339844-8.339844-21.824219-8.339844-30.164063 0l-128.214844 128.214844-128.210937-128.214844c-8.34375-8.339844-21.824219-8.339844-30.164063 0-8.34375 8.339844-8.34375 21.824219 0 30.164063l128.210938 128.214843-128.210938 128.214844c-8.34375 8.339844-8.34375 21.824219 0 30.164063 4.15625 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921875-2.089844 15.082031-6.25l128.210937-128.214844 128.214844 128.214844c4.160156 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921874-2.089844 15.082031-6.25 8.34375-8.339844 8.34375-21.824219 0-30.164063zm0 0\"\n});\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"329pt\",\n    viewBox: \"0 0 329.26933 329\",\n    width: \"329pt\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.17a94979.svg\";\nexport { ForwardRef as ReactComponent };","import \"./LabelledInput.styles.css\";\n\nimport InputComponent from \"../InputComponent/Input.component\";\nimport LabelComponent from \"../LabelComponent/Label.component\";\n\nconst LabelledInputComponent = (props) => {\n  const { title, inputValue, setInputValue, isFocused } = props;\n\n  return (\n    <div className=\"labelled-input-container\">\n      <LabelComponent displayText={title} />\n      <InputComponent\n        displayText={inputValue}\n        setInputValue={setInputValue}\n        isFocused={isFocused}\n      />\n    </div>\n  );\n};\n\nexport default LabelledInputComponent;\n","import { useState, useEffect } from \"react\";\nimport { ReactComponent as CloseSVG } from \"../../assets/close.svg\";\n\nimport \"./Modal.styles.css\";\n\nimport ButtonComponent from \"../ButtonComponent/Button.component\";\nimport LabelledInputComponent from \"../LabelledInputComponent/LabelledInput.component\";\n\nconst ModalComponent = (props) => {\n  const {\n    selectedElement,\n    updateElementValues,\n    cancelUpdateElement,\n    maxXCoordinate,\n    maxYCoordinate,\n  } = props;\n\n  const {\n    elementType,\n    text,\n    xCoordinate,\n    yCoordinate,\n    fontSize,\n    fontWeight,\n    isElementNew,\n  } = selectedElement;\n\n  /**\n   * Local values of Element properties, used to update orignal element only when saved\n   */\n\n  const [textLocal, setTextLocal] = useState(\"\");\n  const [xCoordinateLocal, setXCoordinateLocal] = useState(\"0\");\n  const [yCoordinateLocal, setYCoordinateLocal] = useState(\"0\");\n  const [fontSizeLocal, setFontSizeLocal] = useState(\"0\");\n  const [fontWeightLocal, setFontWeightLocal] = useState(\"0\");\n\n  /**\n   * Used to display error message\n   */\n\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  /**\n   * Triggers updation of Element based on current local values of element properties\n   */\n\n  const updateElementValuesLocal = () => {\n    const element = {\n      ...selectedElement,\n      text: textLocal,\n      xCoordinate: parseInt(xCoordinateLocal),\n      yCoordinate: parseInt(yCoordinateLocal),\n      fontSize: fontSizeLocal,\n      fontWeight: fontWeightLocal,\n    };\n    updateElementValues(isElementNew, element);\n  };\n\n  /**\n   * Cancels any update in properties, closed modal\n   */\n\n  const cancelUpdateElementLocal = () => {\n    cancelUpdateElement();\n  };\n\n  /**\n   * Check for any error in element local properties\n   */\n\n  const checkForError = () => {\n    if (\n      !xCoordinateLocal.trim().length ||\n      isNaN(Number(xCoordinateLocal)) ||\n      parseInt(xCoordinateLocal) < 0 ||\n      parseInt(xCoordinateLocal) > maxXCoordinate\n    ) {\n      setErrorMessage(\"Enter valid X Coordinate value\");\n      return true;\n    } else if (\n      !yCoordinateLocal.trim().length ||\n      isNaN(Number(yCoordinateLocal)) ||\n      parseInt(yCoordinateLocal) < 0 ||\n      parseInt(yCoordinateLocal) > maxYCoordinate\n    ) {\n      setErrorMessage(\"Enter valid Y Coordinate value\");\n      return true;\n    } else if (\n      !fontSizeLocal.trim().length ||\n      isNaN(Number(fontSizeLocal)) ||\n      parseFloat(fontSizeLocal) < 0\n    ) {\n      setErrorMessage(\"Enter valid Font Size value\");\n      return true;\n    } else if (\n      !fontWeightLocal.trim().length ||\n      isNaN(Number(fontWeightLocal)) ||\n      parseInt(fontWeightLocal) < 0\n    ) {\n      setErrorMessage(\"Enter valid Font Weight value\");\n      return true;\n    } else {\n      setErrorMessage(null);\n      return false;\n    }\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    !checkForError() && updateElementValuesLocal();\n  };\n\n  /**\n   * Regular effect to update local values when element properties changes\n   */\n\n  useEffect(() => {\n    setTextLocal(text || \"\");\n  }, [text]);\n\n  useEffect(() => {\n    setXCoordinateLocal(`${xCoordinate}`);\n  }, [xCoordinate]);\n\n  useEffect(() => {\n    setYCoordinateLocal(`${yCoordinate}`);\n  }, [yCoordinate]);\n\n  useEffect(() => {\n    setFontSizeLocal(`${fontSize}`);\n  }, [fontSize]);\n\n  useEffect(() => {\n    setFontWeightLocal(`${fontWeight}`);\n  }, [fontWeight]);\n\n  /**\n   * This Effects add event listener to check for escape key to close modal\n   */\n\n  useEffect(() => {\n    const handleKeyUp = (event) => {\n      const { keyCode } = event;\n      if (keyCode === 27) {\n        cancelUpdateElementLocal();\n      }\n    };\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-component\">\n        <div className=\"modal-component-header\">\n          <span className=\"modal-component-header-value\">{`Edit ${elementType}`}</span>\n          <CloseSVG\n            className=\"modal-component-header-icon\"\n            onClick={() => cancelUpdateElementLocal()}\n          />\n        </div>\n        <form className=\"modal-component-body\" onSubmit={onSubmitHandler}>\n          <LabelledInputComponent\n            title=\"Text\"\n            inputValue={textLocal}\n            setInputValue={setTextLocal}\n            isFocused={true}\n          />\n          <LabelledInputComponent\n            title={`X ( Max ${maxXCoordinate})`}\n            inputValue={xCoordinateLocal}\n            setInputValue={setXCoordinateLocal}\n          />\n          <LabelledInputComponent\n            title={`Y ( Max ${maxYCoordinate})`}\n            inputValue={yCoordinateLocal}\n            setInputValue={setYCoordinateLocal}\n          />\n          <LabelledInputComponent\n            title=\"Font Size\"\n            inputValue={fontSizeLocal}\n            setInputValue={setFontSizeLocal}\n          />\n          <LabelledInputComponent\n            title=\"Font Weight\"\n            inputValue={fontWeightLocal}\n            setInputValue={setFontWeightLocal}\n          />\n          <span className=\"modal-component-body-error\">{errorMessage}</span>\n          <div className=\"modal-component-body-button\">\n            <ButtonComponent\n              displayText=\"Save Changes\"\n              onClickFunction={onSubmitHandler}\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalComponent;\n","import { useState, useRef, useEffect } from \"react\";\nimport { v4 as uuid4 } from \"uuid\";\n\nimport \"./Home.styles.css\";\n\nimport ListContainer from \"../../container/ListContainer/List.container\";\nimport CanvasContainer from \"../../container/CanvasContainer/Canvas.container\";\nimport ModalComponent from \"../../components/ModalComponent/Modal.component\";\n\nconst LOCAL_STORAGE_NAME = \"canvas-elements\";\n\nconst HomeScreen = () => {\n  /**\n   * Object - Max X and Y Coordinates, usefull to set boundary of canvas\n   */\n\n  const [maxCoordinate, setMaxCoordinate] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  /**\n   * Bool - Used to check if element is dropped in canvas, usefull for border\n   */\n\n  const [isElementInCanvas, setIsElementInCanvas] = useState(false);\n\n  /**\n   * Bool - Used to detect if elements are fetched from local storage\n   */\n\n  const [isLocalCanvasElementsSet, setIsLocalCanvasElementsSet] = useState(\n    false\n  );\n\n  /**\n   * Array - Used to store elements on Canvas\n   */\n\n  const [canvasElements, setCanvasElements] = useState([]);\n\n  /**\n   * Object - Selected element is stored, wehn set opens modal\n   */\n\n  const [selectedElement, setSelectedElement] = useState(null);\n\n  /**\n   * Ref - Used to access latest value of Canvas Elements in functions with stale state access\n   */\n\n  const canvasElementsLatest = useRef(canvasElements);\n\n  /**\n   * Removes element selected and closes the update modal\n   */\n\n  const removeSelectedElement = () => {\n    setSelectedElement(null);\n    setIsElementInCanvas(false);\n  };\n\n  /**\n   * Removes given item from canvas elements\n   * @param {string} elementId - Id of element to remove from canvas elements\n   */\n\n  const removeCanvasElement = (elementId) =>\n    setCanvasElements(\n      canvasElements.filter((element) => element.elementId !== elementId)\n    );\n\n  /**\n   * Updates all values of an element\n   * @param {boolean} isElementNew - Indicates if element is new\n   * @param {object} element - Updated element object\n   */\n\n  const updateElementValues = (isElementNew, element) => {\n    if (isElementNew) {\n      setCanvasElements([\n        ...canvasElements,\n        { ...element, isElementNew: false },\n      ]);\n    } else {\n      setCanvasElements((previousCanvasElements) =>\n        previousCanvasElements.map((canvasElement) =>\n          canvasElement.elementId === element.elementId\n            ? { ...element, elementId: uuid4(), isElementNew: false }\n            : canvasElement\n        )\n      );\n    }\n    setSelectedElement(null);\n  };\n\n  /**\n   * Updates position X and Y of an element to point location on canvas\n   * @param {number} xCoordinate - X Coordinate of element\n   * @param {number} yCoordinate - Y Coordinate of element\n   * @param {string} elementId - ID of moving element\n   */\n\n  const updateElementPosition = (xCoordinate, yCoordinate, elementId) => {\n    setCanvasElements((previousCanvasElements) =>\n      previousCanvasElements.map((canvasElement) =>\n        canvasElement.elementId === elementId\n          ? {\n              ...canvasElement,\n              xCoordinate,\n              yCoordinate,\n              elementId: uuid4(),\n              isElementNew: false,\n            }\n          : canvasElement\n      )\n    );\n  };\n\n  /**\n   * Update text value of an element ( used in Input element )\n   * @param {string} text - Text updated through elemnent\n   * @param {string} elementId - ID of element\n   */\n\n  const updateElementText = (text, elementId) => {\n    setCanvasElements(\n      canvasElements.map((canvasElement) => {\n        if (canvasElement.elementId === elementId) {\n          const updatedElement = {\n            ...canvasElement,\n            text,\n            isElementNew: false,\n          };\n          return updatedElement;\n        } else {\n          return canvasElement;\n        }\n      })\n    );\n  };\n\n  /**\n   * Updates Max Coordinates, usefull to check boundaries\n   * @param {number} maxXCoordinate - Max X Coordinate an element can move on Canvas\n   * @param {number} maxYCoordinate - Max Y Coordinate an element can move on Canvas\n   */\n\n  const updateCanvasMaxCoordinates = (maxXCoordinate, maxYCoordinate) => {\n    setMaxCoordinate({\n      x: maxXCoordinate,\n      y: maxYCoordinate - 30,\n    });\n  };\n\n  /**\n   * Sets selected element and opens up modal\n   * @param {string} elementId - ID of element, to open in modal\n   */\n\n  const updateSelectedItem = (elementId) => {\n    for (const element of canvasElementsLatest.current) {\n      if (element.elementId === elementId) {\n        setSelectedElement(element);\n        return;\n      }\n    }\n\n    setSelectedElement(null);\n  };\n\n  /**\n   * Creates a new element configuration and opens up edit modal\n   * @param {string} elementType - Describes element type (label/input/button)\n   * @param {*} xCoordinate - X Coordinate of element dropped\n   * @param {*} yCoordinate - Y Coordinate of element dropped\n   */\n\n  const newCanvasElement = (elementType, xCoordinate, yCoordinate) => {\n    const uid = uuid4();\n    const element = {\n      elementId: uid,\n      elementType,\n      text: null,\n      xCoordinate,\n      yCoordinate,\n      zIndex: `${100 + canvasElementsLatest.current.length}`,\n      fontSize: 2,\n      fontWeight: 100,\n      isElementNew: true,\n    };\n    setSelectedElement(element);\n    setIsElementInCanvas(true);\n  };\n\n  /**\n   * This effect runs after every change in canvas elements (addition, modification)\n   * Updates canvas element ref used to access latest canvas element value\n   * Updates locallly stored canvas elements\n   */\n\n  useEffect(() => {\n    canvasElementsLatest.current = canvasElements;\n    isLocalCanvasElementsSet &&\n      localStorage.setItem(LOCAL_STORAGE_NAME, JSON.stringify(canvasElements));\n  }, [canvasElements, isLocalCanvasElementsSet]);\n\n  /**\n   * This effect runs at mounting to retrive canvas elements stored in local storage\n   */\n\n  useEffect(() => {\n    setCanvasElements(\n      JSON.parse(localStorage.getItem(LOCAL_STORAGE_NAME)) || []\n    );\n    setIsLocalCanvasElementsSet(true);\n  }, []);\n\n  return (\n    <div className=\"home-screen-container\">\n      <CanvasContainer\n        canvasElements={canvasElements}\n        maxCoordinate={maxCoordinate}\n        isElementInCanvas={isElementInCanvas}\n        setSelectedElement={updateSelectedItem}\n        updateElementPosition={updateElementPosition}\n        updateElementText={updateElementText}\n        updateCanvasMaxCoordinates={updateCanvasMaxCoordinates}\n        removeCanvasElement={removeCanvasElement}\n      />\n      <ListContainer\n        triggerCreateItem={newCanvasElement}\n        maxXCoordinate={maxCoordinate.x}\n        maxYCoordinate={maxCoordinate.y}\n      />\n      {selectedElement && (\n        <ModalComponent\n          selectedElement={selectedElement}\n          updateElementValues={updateElementValues}\n          cancelUpdateElement={removeSelectedElement}\n          maxXCoordinate={maxCoordinate.x}\n          maxYCoordinate={maxCoordinate.y}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport HomeScreen from \"./screen/HomeScreen/Home.screen\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HomeScreen />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}